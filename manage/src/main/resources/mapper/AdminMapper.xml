<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.manage.mapper.AdminMapper">

    <resultMap id="AdminResultMap" type="org.example.manage.entity.Admin">
        <id property="id" column="id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="role" column="role" />
        <result property="avatar" column="avatar" />

    </resultMap>

    <select id="selectById" resultMap="AdminResultMap" parameterType="int">
        SELECT * FROM admin WHERE id = #{id}
    </select>


    <select id="selectAll" resultMap="AdminResultMap">
        SELECT * FROM admin
    </select>

    <select id="selectByName" resultMap="AdminResultMap" parameterType="String">
        SELECT * FROM admin WHERE name LIKE CONCAT('%', #{name}, '%')
    </select>

<!--    <insert id="create" parameterType="org.example.manage.entity.Employee" useGeneratedKeys="true" keyProperty="employeeId">-->
<!--#         INSERT INTO employee (username,password,name, gender, age, hire_date, position,department,salary,id_card,email )-->
<!--#         VALUES (#{username},#{password},#{name},#{gender},#{age},#{hireDate},#{position},#{department},#{salary},#{idCard},#{email})-->
<!--        INSERT INTO employee (name, gender, age, hire_date, position,department,salary,id_card,email )-->
<!--        VALUES (#{name},#{gender},#{age},#{hireDate},#{position},#{department},#{salary},#{idCard},#{email})-->
<!--    </insert>-->

    <insert id="create" parameterType="org.example.manage.entity.Admin"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="name != null">name,</if>
            <if test="role != null">role,</if>
            <if test="avatar != null">avatar,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">#{username},</if>
            <if test="password != null">#{password},</if>
            <if test="name != null">#{name},</if>
            <if test="role != null">#{role},</if>
            <if test="avatar != null">#{avatar},</if>
        </trim>
    </insert>
    <update id="update" parameterType="org.example.manage.entity.Admin">
        UPDATE admin
        <set>
            <if test="username != null">username=#{username},</if>
            <if test="password != null">password=#{password},</if>
            <if test="name != null">name=#{name},</if>
            <if test="role != null">role=#{role},</if>
            <if test="avatar != null">avatar=#{avatar},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="int">
        DELETE FROM admin WHERE id = #{id}
    </delete>

    <select id="selectByUsername" resultMap="AdminResultMap" parameterType="String">
        select * from admin WHERE username = #{username}
    </select>

<!--    <select id="selectByUserName" resultMap="EmployeeResultMap" parameterType="org.example.manage.entity.Employee">-->
<!--        select * from employee WHERE username = ${username}-->
<!--    </select>-->


</mapper>